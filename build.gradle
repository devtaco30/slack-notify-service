plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'io.freefair.lombok' version '6.3.0'
}

ext {
    set('testcontainersVersion', "1.17.6")
    set('springCloudVersion', "2021.0.5")
}

group = 'com.devtaco'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// PostgreSQL
	implementation 'org.postgresql:postgresql:42.3.1'

	// http client
	implementation 'com.squareup.okhttp3:okhttp:4.7.2'	

	// for spring cloud config server
  implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// AWS sceret-manager
	implementation 'com.amazonaws.secretsmanager:aws-secretsmanager-jdbc:1.0.11'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.kafka:spring-kafka-test'

	// https://mvnrepository.com/artifact/com.slack.api/slack-api-client
	implementation 'com.slack.api:slack-api-client:1.29.2'

	
	// for test 
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.hamcrest:hamcrest:2.2'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:kafka'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:mongodb'

}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
